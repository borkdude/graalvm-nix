#!/usr/bin/env nix-shell
#!nix-shell -p curl coreutils nix jq -i bash

set -eou pipefail

cd "$(dirname "${BASH_SOURCE[0]}")"

if [[ -z "${1:-}" ]]; then
  echo "usage: $0 <graalvm-ce-version> [file]"
  exit 1
else
  readonly new_version="$1"
  readonly file="${2:-hashes.nix}"
fi

info() { echo "[INFO] $*"; }

echo_file() { echo "$@" >> "$file"; }

readonly urls=(
  "https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${new_version}/graalvm-ce-java@platform@-${new_version}.tar.gz"
  "https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${new_version}/native-image-installable-svm-java@platform@-${new_version}.jar"
  "https://github.com/oracle/truffleruby/releases/download/vm-${new_version}/ruby-installable-svm-java@platform@-${new_version}.jar"
  "https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${new_version}/wasm-installable-svm-java@platform@-${new_version}.jar"
  "https://github.com/graalvm/graalpython/releases/download/vm-${new_version}/python-installable-svm-java@platform@-${new_version}.jar"
)

readonly platforms=(
  "11-linux-aarch64"
  "17-linux-aarch64"
  "11-linux-amd64"
  "17-linux-amd64"
  "11-darwin-amd64"
  "17-darwin-amd64"
)

info "Deleting old $file file..."
rm -f "$file"
info "Generating $file file for 'graalvm-ce' $new_version. This will take a while..."

echo_file "# Generated by $(basename $0) script"
echo_file "{ javaVersionPlatform, ... }:"
echo_file "["

for url in "${urls[@]}"; do
  echo_file "  {"
  echo_file "    sha256 = {"
  for platform in "${platforms[@]}"; do
    if hash="$(nix-prefetch-url "${url//@platform@/$platform}")"; then
      echo_file "      \"$platform\" = \"$hash\";"
    fi
  done
  echo_file '    }.${javaVersionPlatform} or null;'
  echo_file "    url = \"${url//@platform@/\$\{javaVersionPlatform\}}\";"
  echo_file "  }"
done

echo_file "]"

info "Done!"
